  </div><!-- End .app -->
  <!-- Scripts -->
  <script src="//js.pusher.com/3.0/pusher.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
  <script>
    $('#form-start-game').submit(function(e) {
      e.preventDefault();
      var playerName = $('#player-name').val();
      invokeNewGame(playerName);
    });

    var invokeNewGame = function(playerName) {
      $.ajax({
        url: '/game/new',
        method: 'post',
        data: {playerName: playerName},
        success: function(res) {
          $('#form-start-game').hide();
          $('.card-game__link').html('Play this game <a href="/game/' + res.gameId + '">' + res.gameId + '</a>');
        },
        error: function(res) {
          console.log(res);
        }
      });
    }
  </script>
  <script>
    var pusher = new Pusher("8dfaafabafb15e7bb4db", {
      cluster: 'eu',
      encrypted: true,
      authEndpoint: '/pusher_auth'
    });

    var channel = pusher.subscribe('presence-game-{{ gameId }}');

    channel.bind('pusher:subscription_succeeded', function(data) {
      for(var member in channel.members.members) {
        leaderboardAddPlayer(channel.members.members[member].name);
      }

      if (channel.members.count == 1) {
        $('.game__button').attr('disabled', true);
        $('#waiting-notice').html("Waiting for more players...");
      }

      $('.game__button').click(function() {
        var selected = $(this).attr('data-move'),
            type;

        $('.game__button.current').removeClass('current');
        $(this).addClass('current');

        switch(selected) {
          case 'paper':
            type = 1;
            break;
          case 'scissors':
            type = 2;
            break;
          case 'rock':
            type = 3;
            break;
        }

        channel.trigger('client-game-{{ gameId }}-change', {
          type: type,
          player_id: channel.members.me.id
        });

      });

    });

    channel.bind('pusher:member_added', function(data) {
      if (channel.members.count > 1) {
        $('#waiting-notice').hide();
        $('.game__button').attr('disabled', false);
      }
    })

    var initial = 100;
    var count = initial;
    var counter;

    function timer() {
      if (count <= 0) {
          clearInterval(counter);
          return;
      }
      count--;
      displayCount(count);
    }

    function displayCount(count) {
      var res = count / 100;
      var newTime = res.toPrecision(count.toString().length);

      $('#js-timer').html(newTime);
      $('#js-timer').attr('data-timer',newTime);
    }

    counter = setInterval(timer, 100);

    $('#stop').on('click', function () {
      clearInterval(counter);
    });

    $('#reset').on('click', function () {
      clearInterval(counter);
      count = initial;
      displayCount(count);
    });


    var playerStates = {
      1: [],
      2: [],
      3: []
    };

    channel.bind('client-game-{{ gameId }}-change', function(data) {
      addOtherPlayerSelections(data.type, data.player_id);
    });

    var addOtherPlayerSelections = function(typeId, playerId) {
      for(var state in playerStates) {
        for(var i = 0, l = playerStates[state].length; i < l; i++) {
          if (playerStates[state][i] === playerId) {
            playerStates[state].splice(i, 1);
            $('.game__button[data-element=' + state + '] .players ul').empty().html(playerStates[state].join(" ,"));
          }
        }
      }
      playerStates[typeId].push(playerId);
      $('.game__button[data-element=' + typeId + '] .players ul').empty().html(playerStates[typeId].join(" ,"));
    }

    channel.bind('pusher:member_added', function(member) {
      leaderboardAddPlayer(member.info.name);
    });

    channel.bind('pusher:member_removed', function(member) {
      leaderboardRemovePlayer(member.info.name);
    });

    var leaderboardAddPlayer = function(memberName) {
      var html = function(name) {
        return '<li data-player-name="' + name + '">' + name + '</li>';
      }
      if (memberName === channel.members.me.info.name) {
        $('.leaderboard__list').append(html(memberName + (' (You)')));
      } else {
        $('.leaderboard__list').append(html(memberName));
      }
    }

    var leaderboardRemovePlayer = function(memberName) {
      $('.leaderboard__list li[data-player-name="' + memberName + '"]').remove();
    }



  </script>

</body>
</html>